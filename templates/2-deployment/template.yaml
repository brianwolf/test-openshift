apiVersion: v1
kind: Template
metadata:
  name: deployment
  annotations:
    description: "Ejemplo de template para levantar 2 nginx con un index diferente cada uno"
    iconClass: "icon-play"
    tags: "app"

labels:
  environment: DEV

objects:

# IMAGESTREAMS
# ------------------------
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: deployment-is-app1
    labels:
      app: deployment-app1
      template: deployment
    annotations:
      openshift.io/image.insecureRepository: "true"
  spec:
    tags:
      - name: latest
        from:
          kind: DockerImage
          name: 'docker.io/brianlobonalabs/nginx-app1:latest'

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: deployment-is-app2
    labels:
      app: app2
      template: deployment
    annotations:
      openshift.io/image.insecureRepository: "true"
  spec:
    tags:
      - name: latest
        from:
          kind: DockerImage
          name: 'docker.io/brianlobonalabs/nginx-app2:latest'


# SERVICES
# ------------------------
- apiVersion: v1
  kind: Service
  metadata:
    name: deployment-svc-app1
    labels:
      app: deployment-app1
      template: deployment
  spec:
    selector:
      app: deployment-app1
      template: deployment
    sessionAffinity: None
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8081
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    name: deployment-svc-app2
    labels:
      app: deployment-app2
      template: deployment
  spec:
    selector:
      app: deployment-app2
      template: deployment
    type: ClusterIP
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8081
  status:
    loadBalancer: {}

# ROUTERS
# ------------------------
- apiVersion: v1
  kind: Route
  metadata:
    name: deployment-route-app
    labels:
      template: deployment
  spec:
    host: app.${APPLICATION_DOMAIN}.nip.io
    path: "/" 
    to:
      kind: Service
      name: deployment-svc-app1
      weight: 20      
    alternateBackends:
    - kind: Service
      name: deployment-svc-app2 
      weight: 10     


# DEPLOYMENTS
# ------------------------

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: deployment-dc-app1
    labels:
      app: deployment-app1
      template: deployment
  spec:
    replicas: 2
    selector:
      app: deployment-app1
      template: deployment
    template:
      metadata:
        name: deployment-pod-app1
        labels:
          app: deployment-app1
          template: deployment
      spec:
        containers:
        - name: deployment-pod-app1
          image: ${DOCKER_REGISTRY_HOST_PORT}/nalabs/deployment-is-app1
          ports:
          - containerPort: 8081
            protocol: TCP

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: deployment-dc-app2
    labels:
      app: deployment-app2
      template: deployment
  spec:
    replicas: 2
    selector:
      app: deployment-app2
      template: deployment
    template:
      metadata:
        name: deployment-pod-app2
        labels:
          app: deployment-app2
          template: deployment
      spec:
        containers:
        - name: deployment-pod-app2
          image: ${DOCKER_REGISTRY_HOST_PORT}/nalabs/deployment-is-app2
          ports:
          - containerPort: 8081
            protocol: TCP

parameters:

- name: APPLICATION_DOMAIN
  description: host de la aplicacion
  value: 192.168.99.101

- name: DOCKER_REGISTRY_HOST_PORT
  description: host y port del registry
  value: 172.30.1.1:5000